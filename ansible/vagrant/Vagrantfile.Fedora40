# -*- mode: ruby -*-
# vi: set ft=ruby :

$script = <<SCRIPT

# Install python3.8, make it the default python
#sudo dnf -y install python3-libselinux libselinux-devel
#sudo dnf -y install python3.8
#sudo rm /usr/bin/python3
#sudo ln -s /usr/bin/python3.8 /usr/bin/python3

sudo dnf -y update
sudo dnf install -y ansible
sudo dnf install -y python2
sudo mkdir /ansible
sudo cp /etc/ansible/ansible.cfg /ansible
sudo touch /ansible/hosts
sudo sed -i 's?#inventory      = /etc/ansible/hosts?inventory = /ansible/hosts?g' /ansible/ansible.cfg
echo "---------------------------------------------------------------------------------------"
echo "*** Creating public-private keypair for ansible-playbook... for user '$USER' *** "
yes y | ssh-keygen -t rsa -b 4096 -C "adoptopenjdk@gmail.com" -q -P "" -f $HOME/.ssh/id_rsa
echo "---------------------------------------------------------------------------------------"
echo "*** Public-private keypair for ansible-playbook... for user '$USER' has been created in *** "
ls -lash $HOME/.ssh
echo "---------------------------------------------------------------------------------------"
export VAGRANT_MOUNT=/vagrant
echo "*** Creating 'hosts' file for ansible-playbook... ***"
echo "localhost ansible_connection=local ansible_python_interpreter=/usr/bin/python2" > $VAGRANT_MOUNT/playbooks/hosts
echo "---------------------------------------------------------------------------------------"
echo "*** '$VAGRANT_MOUNT/playbooks/hosts' file for ansible-playbook contains ***"
cat $VAGRANT_MOUNT/playbooks/hosts
echo "---------------------------------------------------------------------------------------"

# Put the host machine's IP into the authorised_keys file on the VM
if [ -r /vagrant/id_rsa.pub ]; then
        mkdir -p $HOME/.ssh && cat /vagrant/id_rsa.pub >> $HOME/.ssh/authorized_keys
fi
SCRIPT

# 2 = version of configuration file for Vagrant 1.1+ leading up to 2.0.x
Vagrant.configure("2") do |config|

  config.vm.define :adoptopenjdkF40 do |adoptopenjdkF40|
    adoptopenjdkF40.vm.box = "bento/fedora-40"
    adoptopenjdkF40.vm.box_version = "202404.23.0"
    adoptopenjdkF40.vm.synced_folder ".", "/vagrant"
    adoptopenjdkF40.vm.hostname = "adoptopenjdkF40"
    adoptopenjdkF40.vm.network :private_network, type: "dhcp"
    adoptopenjdkF40.vm.provision "shell", inline: $script, privileged: false
    adoptopenjdkF40.vm.boot_timeout = 900
  end
  config.vm.provider "virtualbox" do |v|
    v.gui = false
    v.memory = 2560
    v.customize ["modifyvm", :id, "--cpuexecutioncap", "50"]
  end
end
